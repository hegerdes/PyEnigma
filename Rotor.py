import copy
from operator import itemgetter


allRotor = {
    1: [[0, 4], [1, 10], [2, 12], [3, 5], [4, 11], [5, 6], [6, 3], [7, 16], [8, 21], [9, 25], [10, 13], [11, 19], [12, 14], [13, 22], [14, 24], [15, 7], [16, 23], [17, 20], [18, 18], [19, 15], [20, 0], [21, 8], [22, 1], [23, 17], [24, 2], [25, 9]],
    2: [[0, 0], [1, 9], [2, 3], [3, 10], [4, 18], [5, 8], [6, 17], [7, 20], [8, 23], [9, 1], [10, 11], [11, 7], [12, 22], [13, 19], [14, 12], [15, 2], [16, 16], [17, 6], [18, 25], [19, 13], [20, 15], [21, 24], [22, 5], [23, 21], [24, 14], [25, 4]],
    3: [[0, 1], [1, 3], [2, 5], [3, 7], [4, 9], [5, 11], [6, 2], [7, 15], [8, 17], [9, 19], [10, 23], [11, 21], [12, 25], [13, 13], [14, 24], [15, 4], [16, 8], [17, 22], [18, 6], [19, 0], [20, 10], [21, 12], [22, 20], [23, 18], [24, 16], [25, 14]],
    4: [[0, 4], [1, 18], [2, 14], [3, 21], [4, 15], [5, 25], [6, 9], [7, 0], [8, 24], [9, 16], [10, 20], [11, 8], [12, 17], [13, 7], [14, 23], [15, 11], [16, 13], [17, 5], [18, 19], [19, 6], [20, 10], [21, 3], [22, 2], [23, 12], [24, 22], [25, 1]],
    5: [[0, 21], [1, 25], [2, 1], [3, 17], [4, 6], [5, 8], [6, 19], [7, 24], [8, 20], [9, 15], [10, 18], [11, 3], [12, 13], [13, 7], [14, 11], [15, 23], [16, 0], [17, 22], [18, 12], [19, 9], [20, 16], [21, 14], [22, 5], [23, 4], [24, 2], [25, 10]]
}

reversedRotors = {
    'A': [[0, 4], [1, 9], [2, 12], [3, 25], [4, 0], [5, 11], [6, 24], [7, 23], [8, 21], [9, 1], [10, 22], [11, 5], [12, 2], [13, 17], [14, 16], [15, 20], [16, 14], [17, 13], [18, 19], [19, 18], [20, 15], [21, 8], [22, 10], [23, 7], [24, 6], [25, 3]],
    'B': [[0, 24], [1, 17], [2, 20], [3, 7], [4, 16], [5, 18], [6, 11], [7, 3], [8, 15], [9, 23], [10, 13], [11, 6], [12, 14], [13, 10], [14, 12], [15, 8], [16, 4], [17, 1], [18, 5], [19, 25], [20, 2], [21, 22], [22, 21], [23, 9], [24, 0], [25, 19]],
    'C': [[0, 5], [1, 21], [2, 15], [3, 9], [4, 8], [5, 0], [6, 14], [7, 24], [8, 4], [9, 3], [10, 17], [11, 25], [12, 23], [13, 22], [14, 6], [15, 2], [16, 19], [17, 10], [18, 20], [19, 16], [20, 18], [21, 1], [22, 13], [23, 12], [24, 7], [25, 11]]
}


class Rotor:

    def __init__(self, RotorNum, RotorPos = 0):
        self.RotorNum = RotorNum
        self.RotorPos = RotorPos
        self.wirering = allRotor[RotorNum]
        self.backwarts = copy.deepcopy(self.wirering)

        for i in self.backwarts:
            tmp=i[1]
            i[1] = i[0]
            i[0] = tmp
            self.backwarts = sorted(self.backwarts,key=itemgetter(0))

    def setPos(self, Pos):
        self.RotorPos = Pos

    def run(self, inputChar, spin):
        if(spin):
            return self.wirering[(self.RotorPos + inputChar) % 26][1]
        else:
            # return self.backwarts[(self.RotorPos + inputChar) % 26][1]
            for i in range(0,26):
                if(inputChar == self.wirering[i][1]):
                    out = self.wirering[i][0]-self.RotorPos
                    while(out < 0):
                        out = 26 + out
                    out = out % 26
                    return out

    def __str__(self):
        return 'RotorNum: ' + str(self.RotorNum) + ' is set to Pos: ' + str(self.RotorPos)


class ReverseRotor:
    def __init__(self, ReverseLetterNum):
        self.reverseRot = reversedRotors[ReverseLetterNum]

    def run(self, inputChar):
        return self.reverseRot[inputChar][1]

